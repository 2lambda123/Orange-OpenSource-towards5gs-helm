{{- if .Values.smf.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.smf.configmap.name }}
  labels:
    app: {{ .Values.global.projectName }}
data:
  smfcfg.conf: |
    info:
      version: 1.0.0
      description: SMF initial local configuration
    
    configuration:
      smfName: SMF
      sbi:
        scheme: {{ .Values.global.sbi.scheme }}
        registerIPv4: {{ .Values.smf.service.name }} # IP used to register to NRF
        bindingIPv4: 0.0.0.0  # IP used to bind the service
        port: {{ .Values.smf.port }}
        tls:
          key: /free5gc/support/TLS/smf.key
          pem: /free5gc/support/TLS/smf.pem
      serviceNameList:
        - nsmf-pdusession
        - nsmf-event-exposure
      snssai_info:
        - sNssai:
            sst: 1
            sd: 010203
          dnnSmfInfoList:
            - dnn: {{ .Values.global.datanetworks.dn1 }}
        - sNssai:
            sst: 1
            sd: 112233
          dnnSmfInfoList:
            - dnn: {{ .Values.global.datanetworks.dn1 }}
      pfcp:
{{- if .Values.global.upf.service.pfcp.enabled }}
        addr: 0.0.0.0
{{- else }}
        addr: {{ .Values.global.smf.n4if.ipAddress }}
{{- end }}
      userplane_information:
{{- if eq .Values.global.userPlaneArchitecture "oneupf" }}
        up_nodes:
          gNB1:
            type: AN
            an_ip: {{ .Values.global.gnb.n3if.ipAddress }} 
          UPF:
            type: UPF
{{- if .Values.global.upf.service.pfcp.enabled }}
            node_id: {{ .Values.global.upf.service.name }} # UPF N4 address
{{- else }}
            node_id: {{ .Values.global.upf.n4if.ipAddress }} # UPF N4 address
{{- end }}
            up_resource_ip: {{ .Values.global.upf.n3if.ipAddress }} # UPF N3 address      
        links:
          - A: gNB1
            B: UPF
{{- end }}
{{- if eq .Values.global.userPlaneArchitecture "ulcl" }}
        up_nodes:
          gNB1:
            type: AN
            an_ip: {{ .Values.global.gnb.n3if.ipAddress }} 
          AnchorUPF1:
            type: UPF
{{- if .Values.global.upf.service.pfcp.enabled }}
            node_id: {{ .Values.global.upf1.service.pfcp.name }} # UPF N4 address
{{- else }}
            node_id: {{ .Values.global.upf1.n4if.ipAddress }} # PFCP address
{{- end }}
            up_resource_ip: {{ .Values.global.upf1.n3if.ipAddress }} # GTPU address
          AnchorUPF2:
            type: UPF
{{- if .Values.global.upf.service.pfcp.enabled }}
            node_id: {{ .Values.global.upf2.service.pfcp.name }} # UPF N4 address
{{- else }}
            node_id: {{ .Values.global.upf2.n4if.ipAddress }} # PFCP address
{{- end }}
            up_resource_ip: {{ .Values.global.upf2.n3if.ipAddress }} # GTPU address
          BranchingUPF:
            type: UPF
{{- if .Values.global.upf.service.pfcp.enabled }}
            node_id: {{ .Values.global.upfb.service.pfcp.name }} # UPF N4 address
{{- else }}
            node_id: {{ .Values.global.upfb.n4if.ipAddress }} # PFCP address
{{- end }}
            up_resource_ip: {{ .Values.global.upfb.n3if.ipAddress }} # GTPU address
        links:
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
          - A: BranchingUPF
            B: AnchorUPF2
{{- end }}
      dnn:
        {{ .Values.global.datanetworks.dn1 }}:
          dns:
            ipv4: 8.8.8.8
            ipv6: 2001:4860:4860::8888
        {{ .Values.global.datanetworks.dn2 }}:
          dns:
            ipv4: 8.8.4.4
            ipv6: 2001:4860:4860::8844
      ue_subnet: {{ .Values.global.uesubnet }}
      nrfUri: {{ .Values.global.sbi.scheme }}://{{ .Values.nrf.service.name }}:{{ .Values.nrf.port }}
{{- if eq .Values.global.userPlaneArchitecture "ulcl" }}
      ulcl: true
{{- end }}
  uerouting.yaml: |
{{- if eq .Values.global.userPlaneArchitecture "ulcl" }}
    info:
      version: 1.0.0
      description: Routing information for UE
    
    ueRoutingInfo:
      - SUPI: imsi-208930000000003
        AN: {{ .Values.global.upf1.n3if.ipAddress }}
        PathList:
          - DestinationIP: {{ .Values.global.ueRouting.destination1 }}
            UPF: !!seq
              - BranchingUPF
              - AnchorUPF1
    
          - DestinationIP: {{ .Values.global.ueRouting.destination2 }}
            UPF: !!seq
              - BranchingUPF
              - AnchorUPF2
    
      - SUPI: imsi-208930000000004
        AN: {{ .Values.global.upf2.n3if.ipAddress }}
        PathList:
          - DestinationIP: {{ .Values.global.ueRouting.destination1 }}
            UPF: !!seq
              - BranchingUPF
              - AnchorUPF1
    
          - DestinationIP: {{ .Values.global.ueRouting.destination2 }}
            UPF: !!seq
              - BranchingUPF
              - AnchorUPF2
{{- end }}

#### Currently, when using the UPF service name in the SMF config, the SMF crashes. So we are using the following script to replace the UPF service name by its IP address.
  wrapper.sh: |
    #!/bin/sh

{{- if and .Values.global.upf.service.pfcp.enabled }}
    ### Copy the IP address of UPF service in the SMF configuration. Currently when not doing that the SMF can connect to the UPF but show an error when trying to send a PDU session creation request to the UPF (we think this par of the code has to change).
    cp /free5gc/config2/uerouting.yaml {{ .Values.volume.mount }}
    cp /free5gc/config2/free5GC.conf {{ .Values.volume.mount }}

{{- if eq .Values.global.userPlaneArchitecture "oneupf" }}
    upfIP=$(nslookup {{ .Values.global.upf.service.pfcp.name }} | grep "Address" | awk '{print $3}')
    sed -i "s/{{ .Values.global.upf.service.pfcp.name }}/$upfIP/g" /free5gc/config2/smfcfg.conf
{{- end }}
{{- if eq .Values.global.userPlaneArchitecture "ulcl" }}
    upfbIP=$(nslookup {{ .Values.global.upfb.service.pfcp.name }} | grep "Address" | awk '{print $3}')
    upf1IP=$(nslookup {{ .Values.global.upf1.service.pfcp.name }} | grep "Address" | awk '{print $3}')
    upf2IP=$(nslookup {{ .Values.global.upf2.service.pfcp.name }} | grep "Address" | awk '{print $3}')
    sed -i "s/{{ .Values.global.upfb.service.pfcp.name }}/$upfbIP/g" /free5gc/config2/smfcfg.conf
    sed -i "s/{{ .Values.global.upf1.service.pfcp.name }}/$upf1IP/g" /free5gc/config2/smfcfg.conf
    sed -i "s/{{ .Values.global.upf2.service.pfcp.name }}/$upf2IP/g" /free5gc/config2/smfcfg.conf
{{- end }}
    cp /free5gc/config2/smfcfg.conf {{ .Values.volume.mount }}
{{- end }}
    /free5gc/smf/smf -smfcfg {{ .Values.volume.mount }}smfcfg.conf 
{{- end }}

